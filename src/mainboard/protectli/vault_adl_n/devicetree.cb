chip soc/intel/alderlake
	# FSP configuration

	register "eist_enable" = "1"

	# Sagv Configuration
	register "sagv" = "SaGv_Enabled"
	register "RMT" = "0"
	register "enable_c6dram" = "1"

	register "tcc_offset" = "20" # TCC of 80C

	device cpu_cluster 0 on end
	device domain 0 on
		subsystemid 0x8086 0x7270 inherit

		device ref igpu on
			register "ddi_portA_config" = "1" # HDMI on port A
			register "ddi_portB_config" = "1" # DP on port B
			register "ddi_ports_config" = "{
				[DDI_PORT_A] = DDI_ENABLE_HPD | DDI_ENABLE_DDC,
				[DDI_PORT_B] = DDI_ENABLE_HPD | DDI_ENABLE_DDC,
				[DDI_PORT_1] = DDI_ENABLE_HPD,
				[DDI_PORT_2] = DDI_ENABLE_HPD,
			}"
		end

		device ref tcss_xhci on
			register "tcss_ports[0]" = "TCSS_PORT_DEFAULT(OC_SKIP)" # USB Type-C no TBT
			register "tcss_ports[1]" = "TCSS_PORT_DEFAULT(OC_SKIP)" # USB Type-C no TBT

			# SOC Aux orientation override:
			# This is a bitfield that corresponds to up to 4 TCSS ports.
			# Bits (0,1) allocated for TCSS Port1 configuration and Bits (2,3)for TCSS Port2.
			# Bits (4,5) allocated for TCSS Port3 configuration and Bits (6,7)for TCSS Port4.
			# Bit0,Bit2,Bit4,Bit6 set to "1" indicates no retimer on USBC Ports
			# Bit1,Bit3,Bit5,Bit7 set to "0" indicates Aux lines are not swapped on the
			# motherboard to USBC connector
			register "tcss_aux_ori" = "0x05"
			register "typec_aux_bias_pads[0]" = "{.pad_auxp_dc = GPP_A21, .pad_auxn_dc = GPP_A22}"
			register "typec_aux_bias_pads[1]" = "{.pad_auxp_dc = GPP_A14, .pad_auxn_dc = GPP_A15}"

			chip drivers/usb/acpi
				device ref tcss_root_hub on
					chip drivers/usb/acpi
						register "desc" = ""USB3 Type-A Port 1 (USB1)""
						register "type" = "UPC_TYPE_USB3_A"
						register "use_custom_pld" = "true"
						register "custom_pld" = "ACPI_PLD_TYPE_A(FRONT, RIGHT, ACPI_PLD_GROUP(2, 1))"
						register "custom_pld.vertical_position" = "PLD_VERTICAL_POSITION_UPPER"
						device ref tcss_usb3_port1 on end
					end
					chip drivers/usb/acpi
						register "desc" = ""USB3 TBT Type-C""
						register "type" = "UPC_TYPE_C_USB2_SS_SWITCH"
						register "use_custom_pld" = "true"
						register "custom_pld" = "ACPI_PLD_TYPE_C(FRONT, RIGHT, ACPI_PLD_GROUP(3, 1))"
						device ref tcss_usb3_port2 on end
					end
				end
			end
		end

		device ref xhci on
			register "usb2_ports[0]" = "USB2_PORT_SHORT(OC_SKIP)" # 5G
			register "usb2_ports[1]" = "USB2_PORT_SHORT(OC_SKIP)" # USB-A 2.0 USB2
			register "usb2_ports[2]" = "USB2_PORT_SHORT(OC_SKIP)" # FUSB1
			register "usb2_ports[3]" = "USB2_PORT_SHORT(OC_SKIP)" # USB-A 2.0 USB2
			register "usb2_ports[4]" = "USB2_PORT_TYPE_C(OC_SKIP)" # USB Type-C no TBT
			register "usb2_ports[5]" = "USB2_PORT_TYPE_C(OC_SKIP)" # USB Type-C no TBT
			register "usb2_ports[6]" = "USB2_PORT_SHORT(OC_SKIP)" # FUSB1
			register "usb2_ports[7]" = "USB2_PORT_SHORT(OC_SKIP)" # WiFi slot

			register "usb3_ports[1]" = "USB3_PORT_DEFAULT(OC_SKIP)" # 5G

			chip drivers/usb/acpi
				device ref xhci_root_hub on
					chip drivers/usb/acpi
						register "desc" = ""USB2 5G (KEY_B_5G)""
						register "type" = "UPC_TYPE_INTERNAL"
						device ref usb2_port1 on end
					end
					chip drivers/usb/acpi
						register "desc" = ""USB2 Type-A Port 2 (COM_USB)""
						register "type" = "UPC_TYPE_A"
						register "use_custom_pld" = "true"
						register "custom_pld" = "ACPI_PLD_TYPE_A(FRONT, RIGHT, ACPI_PLD_GROUP(1, 1))"
						register "custom_pld.vertical_position" = "PLD_VERTICAL_POSITION_LOWER"
						device ref usb2_port2 on end
					end
					chip drivers/usb/acpi
						register "desc" = ""USB2 (FUSB1)""
						register "type" = "UPC_TYPE_INTERNAL"
						device ref usb2_port3 on end
					end
					chip drivers/usb/acpi
						register "desc" = ""USB2 Type-A Port 1 (COM_USB)""
						register "type" = "UPC_TYPE_A"
						register "use_custom_pld" = "true"
						register "custom_pld" = "ACPI_PLD_TYPE_A(FRONT, RIGHT, ACPI_PLD_GROUP(1, 2))"
						register "custom_pld.vertical_position" = "PLD_VERTICAL_POSITION_UPPER"
						device ref usb2_port4 on end
					end

					chip drivers/usb/acpi
						register "desc" = ""USB2 Type-C Port""
						register "type" = "UPC_TYPE_C_USB2_SS"
						register "use_custom_pld" = "true"
						register "custom_pld" = "ACPI_PLD_TYPE_C(FRONT, RIGHT, ACPI_PLD_GROUP(2, 1))"
						device ref usb2_port5 on end
					end
					chip drivers/usb/acpi
						register "desc" = ""USB2 Type-C Port""
						register "type" = "UPC_TYPE_C_USB2_SS"
						register "use_custom_pld" = "true"
						register "custom_pld" = "ACPI_PLD_TYPE_C(FRONT, RIGHT, ACPI_PLD_GROUP(3, 1))"
						device ref usb2_port6 on end
					end
					chip drivers/usb/acpi
						register "desc" = ""USB2 (FUSB1)""
						register "type" = "UPC_TYPE_INTERNAL"
						device ref usb2_port7 on end
					end
					chip drivers/usb/acpi
						register "desc" = ""USB2 WiFi/Bluetooth (KEY_E_WIFI)""
						register "type" = "UPC_TYPE_INTERNAL"
						device ref usb2_port8 on end
					end
				end
			end
		end

		device ref heci1 on end

		device ref emmc on
			register "emmc_enable_hs400_mode" = "true"
		end

		device ref pch_espi on
			# LPC generic I/O ranges
			register "gen1_dec" = "0x00fc0201"
			register "gen2_dec" = "0x003c0a01"
			register "gen3_dec" = "0x000c0081"

			chip superio/ite/it8659e
				register "TMPIN1.mode"    = "THERMAL_PECI"
				register "TMPIN1.offset"  = "0x56"
				register "ec.vin_mask"    = "VIN0 | VIN2 | VIN3 | VIN7"

				# FAN1 is CPU fan (connector on board)
				register "FAN1.mode" = "FAN_SMART_AUTOMATIC"
				register "FAN1.smart.tmpin"     = " 1"
				register "FAN1.smart.tmp_off"   = "40"
				register "FAN1.smart.tmp_start" = "50"
				register "FAN1.smart.tmp_full"  = "85"
				register "FAN1.smart.pwm_start" = "20"
				register "FAN1.smart.slope"     = "32"
				# FAN2 is CPU fan (connector on board)
				register "FAN2.mode" = "FAN_SMART_AUTOMATIC"
				register "FAN2.smart.tmpin"     = " 1"
				register "FAN2.smart.tmp_off"   = "40"
				register "FAN2.smart.tmp_start" = "50"
				register "FAN2.smart.tmp_full"  = "85"
				register "FAN2.smart.pwm_start" = "20"
				register "FAN2.smart.slope"     = "32"

				device pnp 2e.1 on	# COM 1
					io 0x60 = 0x3f8
					irq 0x70 = 4
					irq 0xf1 = 0x52 # IRQ low level
				end
				device pnp 2e.2 on	# COM 2
					io 0x60 = 0x2f8
					irq 0x70 = 3
					irq 0xf1 = 0x52 # IRQ low level
				end
				device pnp 2e.4 on	# Environment Controller
					io 0x60 = 0xa20
					io 0x62 = 0xa10
					irq 0x70 = 0	# Don't use IRQ
					irq 0xf0 = 0x80 # Clear 3VSB off status
					irq 0xf4 = 0x20 # PSON_N is inverted SUSB_N
					# irq 0xfa = 0x20 # Enable WDT output through PWRGD
				end
				device pnp 2e.5 off end	# Keyboard
				device pnp 2e.6 off end	# Mouse
				device pnp 2e.7 on	# GPIO
					io 0x60 = 0xa08
					io 0x62 = 0xa00
				end
				device pnp 2e.a off end	# CIR
			end
			chip drivers/pc80/tpm
				device pnp 0.0 on end
			end

		end
		device ref p2sb hidden end
		device ref pmc hidden
			register "pmc_gpe0_dw0" = "PMC_GPP_A"
			register "pmc_gpe0_dw1" = "PMC_GPP_R"
			register "pmc_gpe0_dw2" = "PMC_GPD"
		end
		device ref hda on
			register "pch_hda_audio_link_hda_enable" = "1"
			register "pch_hda_idisp_link_tmode" = "HDA_TMODE_8T"
			register "pch_hda_idisp_link_frequency" = "HDA_LINKFREQ_96MHZ"
			register "pch_hda_idisp_codec_enable" = "true"
		end
		device ref smbus on end
	end
end
