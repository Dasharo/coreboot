name: Dasharo
on:
  pull_request:
    branches:
      - dasharo
      - dasharo-24.02.1
  push:
    branches:
      - dasharo-24.02.1
    tags:
      - '*'

jobs:
  build_novacustom_ec:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        vendor: [ novacustom ]
        model: [ nv4x_adl, ns5x_adl, nv4x_tgl, ns5x_tgl, v540tu, v560tu ]
    steps:
    - name: Checkout EC
      uses: actions/checkout@v4
      with:
        repository: Dasharo/ec
    - name: Build EC
      run: EC_BOARD_VENDOR=${{ matrix.vendor }} EC_BOARD_MODEL=${{ matrix.model }} ./build.sh
    - name: Save artifacts
      uses: actions/upload-artifact@v4
      with:
        name: "dasharo-${{ matrix.vendor }}-${{ matrix.model }}-ec"
        path: |
          ${{ matrix.vendor }}_${{ matrix.model }}_ec.rom
        retention-days: 30
  build_novacustom:
    environment: NovaCustom
    runs-on: ubuntu-22.04
    container:
      image: coreboot/coreboot-sdk:2023-11-24_2731fa619b
      options: --user 1001
    strategy:
      matrix:
        vendor: [ novacustom ]
        model: [ nv4x_adl, ns5x_adl, nv4x_tgl, ns5x_tgl, v540tu, v560tu, v540tnx, v560tnx ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Checkout pull request HEAD commit instead of merge commit
          # See: https://github.com/actions/checkout#checkout-pull-request-head-commit-instead-of-merge-commit
          ref: ${{ github.event.pull_request.head.sha }}
          # Fetch complete history
          fetch-depth: 0
      - name: Checkout all submodules
        run: git submodule update --init --recursive --checkout
      - name: Obtain blobs
        uses: actions/checkout@v4
        with:
          repository: Dasharo/novacustom-blobs
          ref: 480afdc3d15bb9ec5b72b100581badea11e779f8
          path: 3rdparty/blobs/mainboard
          token: ${{ secrets.NCM_BLOBS_TOKEN }}
      - name: Build Dasharo
        run: |
          cp configs/config.${{ matrix.vendor }}_${{ matrix.model }} .config
          make olddefconfig
          make
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "dasharo-${{ matrix.vendor }}-${{ matrix.model }}"
          path: |
            build/coreboot.rom
          retention-days: 30
  build_optiplex:
    runs-on: ubuntu-22.04
    container:
      image: coreboot/coreboot-sdk:2023-11-24_2731fa619b
      options: --user 1001
    strategy:
      matrix:
        vendor: [ dell ]
        model: [ optiplex_9010_sff, optiplex_9010_sff_uefi ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Checkout pull request HEAD commit instead of merge commit
          # See: https://github.com/actions/checkout#checkout-pull-request-head-commit-instead-of-merge-commit
          ref: ${{ github.event.pull_request.head.sha }}
          # Fetch complete history
          fetch-depth: 0
      - name: Checkout all submodules
        run: git submodule update --init --recursive --checkout
      - name: Build Dasharo
        run: |
          cp configs/config.${{ matrix.vendor }}_${{ matrix.model }}_txt .config
          make olddefconfig
          make
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "dasharo-${{ matrix.vendor }}-${{ matrix.model }}"
          path: |
            build/coreboot.rom
          retention-days: 30
  build_msi:
    runs-on: ubuntu-22.04
    container:
      image: coreboot/coreboot-sdk:2023-11-24_2731fa619b
      options: --user 1001
    strategy:
      matrix:
        vendor: [ msi ]
        model: [ ms7d25_ddr4, ms7d25_ddr5, ms7e06_ddr4, ms7e06_ddr5 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Checkout pull request HEAD commit instead of merge commit
          # See: https://github.com/actions/checkout#checkout-pull-request-head-commit-instead-of-merge-commit
          ref: ${{ github.event.pull_request.head.sha }}
          # Fetch complete history
          fetch-depth: 0
      - name: Checkout all submodules
        run: git submodule update --init --recursive --checkout
      - name: Build Dasharo
        run: |
          cp configs/config.${{ matrix.vendor }}_${{ matrix.model }} .config
          make olddefconfig
          make
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "dasharo-${{ matrix.vendor }}-${{ matrix.model }}"
          path: |
            build/coreboot.rom
          retention-days: 30
  build_protectli:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        vendor: [ protectli ]
        model: [ vp66xx, vp46xx, vp32xx, vp2430, vp2420, vp2410, V1210, V1211, V1410, V1610 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Checkout pull request HEAD commit instead of merge commit
          # See: https://github.com/actions/checkout#checkout-pull-request-head-commit-instead-of-merge-commit
          ref: ${{ github.event.pull_request.head.sha }}
          # Fetch complete history
          fetch-depth: 0
      - name: Checkout all submodules
        run: git submodule update --init --recursive --checkout
      - name: Build Dasharo
        run: |
          ./build.sh ${{ matrix.model }}
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "dasharo-${{ matrix.vendor }}-${{ matrix.model }}"
          path: |
            build/coreboot.rom
          retention-days: 30
  build_pcengines:
    runs-on: ubuntu-22.04
    container:
      image: coreboot/coreboot-sdk:2023-11-24_2731fa619b
      options: --user 1001
    strategy:
      matrix:
        vendor: [ pcengines ]
        model: [ apu2, apu3, apu4, apu6 ]
        payload: [ uefi ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Checkout pull request HEAD commit instead of merge commit
          # See: https://github.com/actions/checkout#checkout-pull-request-head-commit-instead-of-merge-commit
          ref: ${{ github.event.pull_request.head.sha }}
          # Fetch complete history
          fetch-depth: 0
      - name: Checkout all submodules
        run: git submodule update --init --recursive --checkout
      - name: Build Dasharo
        run: |
          cp configs/config.${{ matrix.vendor }}_${{ matrix.payload }}_${{ matrix.model }} .config
          make olddefconfig
          make
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "dasharo-${{ matrix.vendor }}-${{ matrix.model }}-${{ matrix.payload }}"
          path: |
            build/coreboot.rom
          retention-days: 30
  build_q35:
    runs-on: ubuntu-22.04
    container:
      image: coreboot/coreboot-sdk:2023-11-24_2731fa619b
      options: --user 1001
    strategy:
      matrix:
        vendor: [ emulation_qemu ]
        model: [ x86_q35 ]
        payload: [ uefi, uefi_all_menus ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Checkout pull request HEAD commit instead of merge commit
          # See: https://github.com/actions/checkout#checkout-pull-request-head-commit-instead-of-merge-commit
          ref: ${{ github.event.pull_request.head.sha }}
          # Fetch complete history
          fetch-depth: 0
      - name: Build Dasharo
        run: |
          cp configs/config.${{ matrix.vendor }}_${{ matrix.model }}_${{ matrix.payload }} .config
          make olddefconfig
          make
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "dasharo-${{ matrix.vendor }}-${{ matrix.model }}-${{ matrix.payload }}"
          path: |
            build/coreboot.rom
          retention-days: 30
  build_hardkernel_odroid_h4:
    runs-on: ubuntu-22.04
    container:
      image: coreboot/coreboot-sdk:2024-02-18_732134932b
      options: --user 1001
    strategy:
      matrix:
        vendor: [ hardkernel ]
        model: [ odroid_h4 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Checkout pull request HEAD commit instead of merge commit
          # See: https://github.com/actions/checkout#checkout-pull-request-head-commit-instead-of-merge-commit
          ref: ${{ github.event.pull_request.head.sha }}
          # Fetch complete history
          fetch-depth: 0
      - name: Checkout all submodules
        run: git submodule update --init --recursive --checkout
      - name: Build Dasharo
        run: |
          cp configs/config.${{ matrix.vendor }}_${{ matrix.model }} .config
          make olddefconfig
          make
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "dasharo-${{ matrix.vendor }}-${{ matrix.model }}"
          path: |
            build/coreboot.rom
          retention-days: 30

  deploy_protectli_adl:
    if: startsWith(github.ref, 'refs/tags/protectli_vault_adl_')
    needs: build_protectli
    uses: ./.github/workflows/deploy-template.yml
    with:
      platform: protectli
      vendor: ${{ matrix.vendor }}
      model: ${{ matrix.model }}
    secrets: inherit
    strategy:
      matrix:
        vendor: [ protectli ]
        model: [ vp66xx ]
  deploy_protectli_adl_n:
    if: startsWith(github.ref, 'refs/tags/protectli_vault_adln_')
    needs: build_protectli
    uses: ./.github/workflows/deploy-template.yml
    with:
      platform: protectli
      vendor: ${{ matrix.vendor }}
      model: ${{ matrix.model }}
    secrets: inherit
    strategy:
      matrix:
        vendor: [ protectli ]
        model: [ vp32xx ]
  deploy_protectli_vp2430:
    if: startsWith(github.ref, 'refs/tags/protectli_vp2430_')
    needs: build_protectli
    uses: ./.github/workflows/deploy-template.yml
    with:
      platform: protectli
      vendor: ${{ matrix.vendor }}
      model: ${{ matrix.model }}
    secrets: inherit
    strategy:
      matrix:
        vendor: [ protectli ]
        model: [ vp2430 ]
  deploy_protectli_jsl:
    if: startsWith(github.ref, 'refs/tags/protectli_vault_jsl')
    needs: build_protectli
    uses: ./.github/workflows/deploy-template.yml
    with:
      platform: protectli
      vendor: ${{ matrix.vendor }}
      model: ${{ matrix.model }}
    secrets: inherit
    strategy:
      matrix:
        vendor: [ protectli ]
        model: [ V1210, V1211, V1410, V1610 ]
  deploy_protectli_glk:
    if: startsWith(github.ref, 'refs/tags/protectli_vault_glk')
    needs: build_protectli
    uses: ./.github/workflows/deploy-template.yml
    with:
      platform: protectli
      vendor: ${{ matrix.vendor }}
      model: ${{ matrix.model }}
    secrets: inherit
    strategy:
      matrix:
        vendor: [ protectli ]
        model: [ vp2410 ]
  deploy_protectli_ehl:
    if: startsWith(github.ref, 'refs/tags/protectli_vault_ehl')
    needs: build_protectli
    uses: ./.github/workflows/deploy-template.yml
    with:
      platform: protectli
      vendor: ${{ matrix.vendor }}
      model: ${{ matrix.model }}
    secrets: inherit
    strategy:
      matrix:
        vendor: [ protectli ]
        model: [ vp2420 ]
  deploy_protectli_cml:
    if: startsWith(github.ref, 'refs/tags/protectli_vault_cml')
    needs: build_protectli
    uses: ./.github/workflows/deploy-template.yml
    with:
      platform: protectli
      vendor: ${{ matrix.vendor }}
      model: ${{ matrix.model }}
    secrets: inherit
    strategy:
      matrix:
        vendor: [ protectli ]
        model: [ vp46xx ]
  deploy_novacustom:
    if: startsWith(github.ref, 'refs/tags/novacustom')
    needs: build_novacustom
    uses: ./.github/workflows/deploy-template.yml
    with:
      platform: novacustom
    secrets: inherit
  deploy_pcengines:
    if: startsWith(github.ref, 'refs/tags/pcengines')
    needs: build_pcengines
    uses: ./.github/workflows/deploy-template.yml
    with:
      platform: pcengines
      vendor: ${{ matrix.vendor }}
      model: ${{ matrix.model }}
      payload: ${{ matrix.payload }}
    secrets: inherit
    strategy:
      matrix:
        vendor: [ pcengines ]
        model: [ apu2, apu3, apu4, apu6 ]
        payload: [ uefi ]
  deploy_msi:
    if: startsWith(github.ref, 'refs/tags/msi')
    needs: build_msi
    uses: ./.github/workflows/deploy-template.yml
    with:
      platform: msi
      type: ${{ matrix.type }}
    secrets: inherit
    strategy:
      matrix:
        type: [ ddr4, ddr5 ]
  deploy_hardkernel_odroid:
    if: startsWith(github.ref, 'refs/tags/hardkernel_odroid_h4')
    needs: build_hardkernel_odroid_h4
    uses: ./.github/workflows/deploy-template.yml
    with:
      platform: hardkernel
      vendor: ${{ matrix.vendor }}
      model: ${{ matrix.model }}
    secrets: inherit
    strategy:
      matrix:
        vendor: [ hardkernel ]
        model: [ odroid_h4 ]
